//T12SCIN1 JOB (OP1,SC,WDS0BF),MDBTEAM.6954,PRTY=8,MSGCLASS=Q
//*
//* TO INITIALISE AN MDB DATA SET - SET PARAMETERS ON EXEC CARD
//* AT END & MEMBER NAME OF DESCRIPTOR SEQUENCE ON LOCALSEQ CARD
//*  (USE MDBINIT IF NO SEQUENCE WANTED)
//* THE SIZE OF THE OVERFLOW POOL WILL BE ADJUSTED TO INCLUDE ANY BLOCKS
//* WHICH WOULD OTHERWISE NOT BE USED, SO ONLY A ROUGH NUMBER IS NEEDED.
//*
//CL EXEC FORT2CL,FPARMS='NOFIPS,CHARLEN(28000)'
*
*   *   *   *   *   *   *   *   *  *   *   *   *   *   *   *   *
*
*Y2K  16.06.1997  MDBINITS is Year 2000 compliant.
*
*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *
*
      PARAMETER (LTRACK=56664,MAXBLK=13999) ! 13999 HALFWORDS
      INTEGER*2 BLOCK(MAXBLK) /MAXBLK*0/    ! 27998 BYTES
      CHARACTER PARMIN*80, TEXT*(MAXBLK*2)
      LOGICAL LOC/.FALSE./
*                          ! READ PARM AS CHARACTERS, THEN CONVERT
      CALL PARM(1,PARMIN)
      READ (PARMIN,*) NCYLS,LB,LENTRY,IXBLKS,IBKHRS,IOFSET,NOFLOS
*
      IF (IXBLKS.GE.256) THEN
        PRINT *,'MDB DATA SETS MUST HAVE LESS THAN 256 INDEX BLOCKS!'
        STOP
      ENDIF
*
      IF (NOFLOS.GT.0 .AND. IXBLKS.GE.128) THEN
        PRINT *,'MUST BE LESS THAN 128 INDEX BLOCKS WITH OVERFLOWS!'
        STOP
      ENDIF
*
      IF (IXBLKS.GE.128) THEN
        PRINT *,'Will data be stored with AIRSTO?'
        PRINT *,'If so, there must be less than 128 index blocks.'
        PRINT *,'Remove this check if you really want so many!'
        STOP
      ENDIF
*
      INQUIRE (FILE='LOCALSEQ',EXIST=LOC) ! IS THERE A LOCAL SEQUENCE?
*                               ! FIND BLOCK COUNT FROM SIZE IN CYLS
      NBT=(LTRACK+500)/(LB+500) ! NUMBER OF BLOCKS PER TRACK
      NBLOKS=NCYLS*15*NBT       ! TOTAL BLOCKS (IF 15 TRACKS/CYL)
      NLEFT=NBLOKS-1-NOFLOS     ! BLOCKS FOR INDEX & DATA
      IF (LOC) NLEFT=NLEFT-1    ! ONE LESS INDEX/DATA BLOCK IF SEQS
      IF (NOFLOS.GT.0) NOFLOS=NOFLOS+MOD(NLEFT,IXBLKS)
*                         ! SET PARAMETERS AT START & END OF MAP BLOCK
      BLOCK(1)=NBLOKS           ! TOTAL NUMBER OF BLOCKS IN DATA BASE
      BLOCK(2)=IXBLKS           ! NUMBER OF INDEX BLOCKS IN DATA BASE
      BLOCK(3)=IBKHRS           ! NUMBER OF HOURS IN EACH INDEX BLOCK
      BLOCK(4)=IOFSET           ! 1ST HOUR IN 1ST INDEX BLOCK AFTER 0Z
      BLOCK(LB/2-1)=NOFLOS      ! NUMBER OF OVERFLOW RECORDS
      BLOCK(LB/2)=LENTRY        ! LENGTH OF INDEX ENTRY
*                               ! SET BYTE AFTER LAST BYTE OF MAP
      NSEQ=(NBLOKS+8+1)/2       ! HALFWORD SET =2 IF SEQS IN 2ND BLOCK
      IF (MOD(NBLOKS,2).EQ.0) BLOCK(NSEQ)=2     ! IF EVEN NO OF BLOCKS
      IF (MOD(NBLOKS,2).EQ.1) BLOCK(NSEQ)=2*256 ! IF ODD NO OF BLOCKS
*
      WRITE (1) (BLOCK(N),N=1,LB/2)  ! INITIALISE FIRST BLOCK
*
      DO 4 N=1,4
    4 BLOCK(N)=0                ! RESET FIRST 4 HALFWORDS TO ZERO
      BLOCK(NSEQ)=0             ! & HALFWORD WITH SEQUENCE BLOCK NUMBER
      BLOCK(LB/2-1)=0           ! & LAST 2 HALFWORDS TOO
      BLOCK(LB/2)=0
*
      IF (LOC) THEN             ! PUT ANY SEQUENCE IN SECOND BLOCK
        OPEN (2,FILE='LOCALSEQ',FORM='UNFORMATTED')
        L=0
   20   READ (2,END=21) TEXT(L*80+1:L*80+80)
        L=L+1
        GO TO 20
   21   TEXT(L*80+1:L*80+5)=' END '
        WRITE (1) TEXT(:LB)
      ELSE                      ! IF NONE, SECOND BLOCK IS LIKE REST
        WRITE (1) (BLOCK(N),N=1,LB/2)
      ENDIF
*
      DO 10 I=3,NBLOKS          ! INITIALISE REST OF BLOCKS
   10 WRITE (1) (BLOCK(N),N=1,LB/2)
*
      STOP
      END
//LKED.MP DD DSN=MET.PROGLIB,DISP=SHR
 INCLUDE MP(CLPARM)
//INIT PROC CYLS=
// EXEC FORT2G,
// PARM='&CYLS,&BLOCK,&ENTRYLEN,&INDBLOKS,&HRSINBLK,&OFFSET,&OVERFLOS/'
//GO.FT01F001 DD DSN=&DSN,DISP=(,CATLG),VOL=SER=&DISK,
//  DCB=(RECFM=F,BLKSIZE=&BLOCK),UNIT=DISK,SPACE=(CYL,&CYLS)
//LOCALSEQ DD DISP=SHR,DSN=MDB.MERGE.SEQUENCE(SSMI)
// PEND
// EXEC INIT,DSN='MCC3.SC.SSMI.OPER.GAIR',CYLS=200,BLOCK=27998,
//    ENTRYLEN=12,INDBLOKS=120,HRSINBLK=1,OFFSET=0,OVERFLOS=0,
//    DISK=OPR011
